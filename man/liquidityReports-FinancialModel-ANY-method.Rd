% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FinancialModel.R
\name{liquidityReports,FinancialModel,ANY-method}
\alias{liquidityReports,FinancialModel,ANY-method}
\title{liquidityReports(host = FinancialModel)}
\usage{
\S4method{liquidityReports}{FinancialModel,ANY}(host)
}
\arguments{
\item{host}{FinancialModel with nominalValueReports in currentScenarioAnalysis}
}
\description{
This method computes liquidityReports for the currentScenarioAnalysis of the
host FinancialModel and causes these liquidity reports to be saved in the
liquidityReports attribute of that ScenarioAnlysis. It does this by calling 
liquidityReports() on the currentScenarioAnalysis and passing in the
timeline of the Financial model as a parameter
}
\examples{
{
  fmID       <- "fm001"
  fmDescr    <- "test Financial Model logic with example"
  entprID    <- "modelBank01"
  currency   <- "USD"
  serverURL  <- "https://demo.actusfrf.org:8080/"
  yamlstring <- paste0("\nname:  a Model Bank\nAssets:\n  Current:\n     actusCIDs:\n",
  "        - pam001\n        - pam002\n        - ann003\n  ShortTerm:\n",
  "     actusCIDs:\n        - pam004\n        - ann005\n  LongTerm:\n",
  "     functionIDs:\n        - edf006\nLiabilities:\n  Debt:\n     actusCIDs:\n",
  "        - pam007\n  Equity:\nOperations:\n  Cashflows:\n     functionIDs:\n",
  "        - ocf008\n")
  accountsTree <- AccountsTree(yamlstring)
  mydatadir <- "~/mydata"
  installSampleData(mydatadir)
  cdfn  <- "~/mydata/TestPortfolio.csv"
  ptf   <-  samplePortfolio(cdfn)
  tl <- Timeline(statusDate = "2023-01-01", monthsPerPeriod = 6, 
                 reportCount=3, periodCount = 6)  
                 fm1 <- initFinancialModel(
                   fmID=fmID, fmDescr= fmDescr, entprID = entprID,
                   accntsTree = accountsTree, ptf = ptf, curr = currency,
                   timeline = tl, serverURL = serverURL)
  rxdfp <- paste0(mydatadir,"/UST5Y_fallingRates.csv") 
  rfx <- sampleReferenceIndex(rxdfp,"UST5Y_fallingRates", "YC_EA_AAA",100)
  marketData <- list(rfx)
  msg1 <- addScenarioAnalysis(fm = fm1, scnID= "UST5Y_fallingRates", 
                              rfxs = marketData, yc = YieldCurve()) 
  msg2 <- generateEvents(host= fm1)
  msg3 <- events2dfByPeriod(host= fm1)
  msg4 <-  nominalValueReports(host = fm1)
  msg5 <- liquidityReports(host = fm1) 
}
}
